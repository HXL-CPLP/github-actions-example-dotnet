# SPDX-License-Identifier: Unlicense OR 0BSD

# - https://docs.github.com/pt/actions
# - https://github.com/actions/setup-dotnet

name: dotnet-cli-release

on:
  push:
    branches:
      - main

jobs:
  #### dotnet-cli-release-windows-latest #######################################
  dotnet-cli-release-windows-latest:
    # runs-on: ubuntu-latest
    runs-on: windows-latest
    name: dotnet-cli-release-windows-latest
    steps:

      #### _____________________________________________________________________
      # _[por-Latn]
      # Passo comum em todo GitHub action: obtem uma cópia do repositório
      # para máquina que esta rodando os testes
      # [por-Latn]_
      - uses: actions/checkout@v2

      #### _____________________________________________________________________
      # @see https://github.com/actions/setup-dotnet
      # @see https://github.com/timheuer/aspnet-core-sample-deploy/blob/master/.github/workflows/build-and-deploy.yml
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      # - run: dotnet build programma-exemplum-dotnet.csproj
      - run: dotnet publish --configuration Release programma-exemplum-dotnet.csproj

      - run: dotnet test programma-exemplum-dotnet.csproj

      - run: tree /f

  #### dotnet-cli-release-ubuntu-latest ########################################
  dotnet-cli-release-ubuntu-latest:
    runs-on: ubuntu-latest
    name: dotnet-cli-release-windows-latest
    steps:

      #### _____________________________________________________________________
      # _[por-Latn]
      # Passo comum em todo GitHub action: obtem uma cópia do repositório
      # para máquina que esta rodando os testes
      # [por-Latn]_
      - uses: actions/checkout@v2

      #### _____________________________________________________________________
      # @see https://github.com/actions/setup-dotnet
      # @see https://github.com/timheuer/aspnet-core-sample-deploy/blob/master/.github/workflows/build-and-deploy.yml
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      # - run: dotnet build programma-exemplum-dotnet.csproj
      - run: dotnet publish --configuration Release programma-exemplum-dotnet.csproj

      - run: dotnet test programma-exemplum-dotnet.csproj

      - run: ls -lha

  #### dotnet-cli-release-macos-latest #########################################
  dotnet-cli-release-macos-latest:
    runs-on: macos-latest
    name: dotnet-cli-release-windows-latest
    steps:

      #### _____________________________________________________________________
      # _[por-Latn]
      # Passo comum em todo GitHub action: obtem uma cópia do repositório
      # para máquina que esta rodando os testes
      # [por-Latn]_
      - uses: actions/checkout@v2

      #### _____________________________________________________________________
      # @see https://github.com/actions/setup-dotnet
      # @see https://github.com/timheuer/aspnet-core-sample-deploy/blob/master/.github/workflows/build-and-deploy.yml
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      # - run: dotnet build programma-exemplum-dotnet.csproj
      - run: dotnet publish --configuration Release programma-exemplum-dotnet.csproj

      - run: dotnet test programma-exemplum-dotnet.csproj

      - run: ls -lha


      ##### TODO: continue .....................................................
      # _[por-Latn]
      # É possível usar GitHub actions para publicar pacotes, e isso envolve
      # usar opões extras documentadas em https://github.com/actions/setup-dotnet
      # A forma como variável NUGET_AUTH_TOKEN é salva pode requerer
      # certos cuidados. Vide
      # https://docs.github.com/pt/actions/security-guides/security-hardening-for-github-actions
      #
      # Caso seu projeto tenha relação com algo humanitário, colaboradores
      # do HXL-CPLP podem ajudar nessa etapa.
      # [por-Latn]_
      - run: dotnet publish programma-exemplum-dotnet.csproj
      # # ./bin/Release/net5.0/programma-exemplum-dotnet

      # - name: "GitHub Release: update/publish lastest"
      #   uses: docker://antonyurchenko/git-release:latest
      #   continue-on-error: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     UNRELEASED: "update"
      #   # with:
      #   #   # programma-exemplum-flutter.app 168mb, too much
      #   #   # INFO uploading asset: programma-exemplum-flutter.aab
      #   #   args: |
      #   #     programma-exemplum-flutter.apk/app-release.apk